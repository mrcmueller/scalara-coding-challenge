/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { ImmobilieAntwortMitBeziehungenDto } from '../models/immobilie-antwort-mit-beziehungen-dto';
import { immobilienControllerAendereImmobilie } from '../fn/immobilien/immobilien-controller-aendere-immobilie';
import { ImmobilienControllerAendereImmobilie$Params } from '../fn/immobilien/immobilien-controller-aendere-immobilie';
import { immobilienControllerErstelleImmobilie } from '../fn/immobilien/immobilien-controller-erstelle-immobilie';
import { ImmobilienControllerErstelleImmobilie$Params } from '../fn/immobilien/immobilien-controller-erstelle-immobilie';
import { immobilienControllerImmobilie } from '../fn/immobilien/immobilien-controller-immobilie';
import { ImmobilienControllerImmobilie$Params } from '../fn/immobilien/immobilien-controller-immobilie';
import { immobilienControllerImmobilien } from '../fn/immobilien/immobilien-controller-immobilien';
import { ImmobilienControllerImmobilien$Params } from '../fn/immobilien/immobilien-controller-immobilien';
import { immobilienControllerLoescheImmobilie } from '../fn/immobilien/immobilien-controller-loesche-immobilie';
import { ImmobilienControllerLoescheImmobilie$Params } from '../fn/immobilien/immobilien-controller-loesche-immobilie';

@Injectable({ providedIn: 'root' })
export class ImmobilienService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `immobilienControllerImmobilien()` */
  static readonly ImmobilienControllerImmobilienPath = '/immobilien';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `immobilienControllerImmobilien()` instead.
   *
   * This method doesn't expect any request body.
   */
  immobilienControllerImmobilien$Response(params?: ImmobilienControllerImmobilien$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<ImmobilieAntwortMitBeziehungenDto>>> {
    return immobilienControllerImmobilien(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `immobilienControllerImmobilien$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  immobilienControllerImmobilien(params?: ImmobilienControllerImmobilien$Params, context?: HttpContext): Observable<Array<ImmobilieAntwortMitBeziehungenDto>> {
    return this.immobilienControllerImmobilien$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<ImmobilieAntwortMitBeziehungenDto>>): Array<ImmobilieAntwortMitBeziehungenDto> => r.body)
    );
  }

  /** Path part for operation `immobilienControllerErstelleImmobilie()` */
  static readonly ImmobilienControllerErstelleImmobiliePath = '/immobilien';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `immobilienControllerErstelleImmobilie()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  immobilienControllerErstelleImmobilie$Response(params: ImmobilienControllerErstelleImmobilie$Params, context?: HttpContext): Observable<StrictHttpResponse<ImmobilieAntwortMitBeziehungenDto>> {
    return immobilienControllerErstelleImmobilie(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `immobilienControllerErstelleImmobilie$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  immobilienControllerErstelleImmobilie(params: ImmobilienControllerErstelleImmobilie$Params, context?: HttpContext): Observable<ImmobilieAntwortMitBeziehungenDto> {
    return this.immobilienControllerErstelleImmobilie$Response(params, context).pipe(
      map((r: StrictHttpResponse<ImmobilieAntwortMitBeziehungenDto>): ImmobilieAntwortMitBeziehungenDto => r.body)
    );
  }

  /** Path part for operation `immobilienControllerImmobilie()` */
  static readonly ImmobilienControllerImmobiliePath = '/immobilien/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `immobilienControllerImmobilie()` instead.
   *
   * This method doesn't expect any request body.
   */
  immobilienControllerImmobilie$Response(params: ImmobilienControllerImmobilie$Params, context?: HttpContext): Observable<StrictHttpResponse<ImmobilieAntwortMitBeziehungenDto>> {
    return immobilienControllerImmobilie(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `immobilienControllerImmobilie$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  immobilienControllerImmobilie(params: ImmobilienControllerImmobilie$Params, context?: HttpContext): Observable<ImmobilieAntwortMitBeziehungenDto> {
    return this.immobilienControllerImmobilie$Response(params, context).pipe(
      map((r: StrictHttpResponse<ImmobilieAntwortMitBeziehungenDto>): ImmobilieAntwortMitBeziehungenDto => r.body)
    );
  }

  /** Path part for operation `immobilienControllerLoescheImmobilie()` */
  static readonly ImmobilienControllerLoescheImmobiliePath = '/immobilien/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `immobilienControllerLoescheImmobilie()` instead.
   *
   * This method doesn't expect any request body.
   */
  immobilienControllerLoescheImmobilie$Response(params: ImmobilienControllerLoescheImmobilie$Params, context?: HttpContext): Observable<StrictHttpResponse<ImmobilieAntwortMitBeziehungenDto>> {
    return immobilienControllerLoescheImmobilie(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `immobilienControllerLoescheImmobilie$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  immobilienControllerLoescheImmobilie(params: ImmobilienControllerLoescheImmobilie$Params, context?: HttpContext): Observable<ImmobilieAntwortMitBeziehungenDto> {
    return this.immobilienControllerLoescheImmobilie$Response(params, context).pipe(
      map((r: StrictHttpResponse<ImmobilieAntwortMitBeziehungenDto>): ImmobilieAntwortMitBeziehungenDto => r.body)
    );
  }

  /** Path part for operation `immobilienControllerAendereImmobilie()` */
  static readonly ImmobilienControllerAendereImmobiliePath = '/immobilien/{id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `immobilienControllerAendereImmobilie()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  immobilienControllerAendereImmobilie$Response(params: ImmobilienControllerAendereImmobilie$Params, context?: HttpContext): Observable<StrictHttpResponse<ImmobilieAntwortMitBeziehungenDto>> {
    return immobilienControllerAendereImmobilie(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `immobilienControllerAendereImmobilie$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  immobilienControllerAendereImmobilie(params: ImmobilienControllerAendereImmobilie$Params, context?: HttpContext): Observable<ImmobilieAntwortMitBeziehungenDto> {
    return this.immobilienControllerAendereImmobilie$Response(params, context).pipe(
      map((r: StrictHttpResponse<ImmobilieAntwortMitBeziehungenDto>): ImmobilieAntwortMitBeziehungenDto => r.body)
    );
  }

}
